# Environment Configuration Template for Cyrano AI Platform
# Copy this file to .env and fill in your values

# =================
# DATABASE
# =================
# PostgreSQL connection string
# Examples:
# - Neon: postgresql://username:password@ep-xxx-xxx.us-east-1.aws.neon.tech/dbname
# - Supabase: postgresql://postgres:password@db.xxx.supabase.co:5432/postgres
# - Railway: postgresql://postgres:password@containers-us-west-xxx.railway.app:5432/railway
DATABASE_URL=postgresql://username:password@localhost:5432/cyrano

# =================
# AI PROVIDERS
# =================
# OpenAI API Key (Required)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-...

# Anthropic Claude API Key (Required)
# Get from: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-...

# Google Gemini API Key (Required)
# Get from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=...

# Perplexity API Key (Required)
# Get from: https://www.perplexity.ai/settings/api
PERPLEXITY_API_KEY=pplx-...

# =================
# OPTIONAL AI PROVIDERS
# =================
# xAI Grok API Key (Optional)
# Get from: https://console.x.ai/
XAI_API_KEY=xai-...

# DeepSeek API Key (Optional)
# Get from: https://platform.deepseek.com/api_keys
DEEPSEEK_API_KEY=sk-...

# =================
# SECURITY
# =================
# Session secret for cookie signing (REQUIRED - Generate random string)
SESSION_SECRET=your-super-secure-random-string-here

# JWT secret for token signing (REQUIRED - Generate random string)
JWT_SECRET=another-super-secure-random-string-here

# =================
# FILE STORAGE
# =================
# Choose ONE of the following storage options:

# Option 1: Cloudinary (Recommended)
# CLOUDINARY_CLOUD_NAME=your-cloud-name
# CLOUDINARY_API_KEY=your-api-key
# CLOUDINARY_API_SECRET=your-api-secret

# Option 2: AWS S3
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key
# AWS_BUCKET_NAME=your-bucket-name
# AWS_REGION=us-east-1

# Option 3: Google Cloud Storage
# GOOGLE_CLOUD_PROJECT_ID=your-project-id
# GOOGLE_CLOUD_BUCKET_NAME=your-bucket-name
# GOOGLE_CLOUD_KEY_FILENAME=path/to/service-account.json

# =================
# APPLICATION SETTINGS
# =================
# Environment (development, production)
NODE_ENV=production

# Port (usually auto-set by hosting provider)
PORT=5000

# CORS origins (comma-separated for multiple domains)
CORS_ORIGIN=https://yourdomain.com

# Rate limiting (requests per minute)
RATE_LIMIT=100

# =================
# MONITORING (Optional)
# =================
# Sentry DSN for error tracking
# SENTRY_DSN=https://xxx@xxx.ingest.sentry.io/xxx

# =================
# QUICK SETUP COMMANDS
# =================
# 1. Generate secure secrets:
#    node -e "console.log('SESSION_SECRET=' + require('crypto').randomBytes(32).toString('hex'))"
#    node -e "console.log('JWT_SECRET=' + require('crypto').randomBytes(32).toString('hex'))"
#
# 2. Test database connection:
#    npm run db:push
#
# 3. Start development:
#    npm run dev